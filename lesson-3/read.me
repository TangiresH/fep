Задача 1:



К предыдущему ДЗ добавить валидацию оператора и операндов.
Оператор должен быть только один из тех, которые мы обрабатываем.
Операнд - обязательно число.

Разбиваем программу на переиспользуемые блоки кода (функции), названия функций придумываем сами:
- ф. получить арифметический оператор
- ф. получить операнд
- ф. посчитать
- ф. показать результат

(!) Каждая ф. должна быть независимой от внешних переменных т.е. принимать аргументы и возвращать результат.
(!) Переписываем свою домашку, а не мою.
(!) Соблюдаем стиль кода: функции размещаем внизу, а вызовы функций вверху.
(!) Валидация должна быть самой простой. Используем isNaN для валидации числа.

Порядок работы программы:
1. получаем значения всех переменных
2. валидируем данные:
 оператор - один из разрешенных, как вариант используйте массив + .includes()
 операнд - число, используйте isNaN()
3. Если данные валидны то все считаем и показываем результат иначе показываем alert c общей ошибкой: 'Вы ввели неверные данные'. Детализиировать ошибку не надо!



Задача 2:



const obj = {
  prop: '42',
  prop2: [8, 9, 10, {
    beautifulPropertyName: 88,
    'property with spaces': {
      a: {
        b: '',
        c: {
          someProperty: [{
            'prop name': 'I am a smart programmer',
          }],
        },
      },
    },
  }],
  prop3: function() {
    return {
      baz: 'Hello',
      bar: {
        anotherBeautifulProp: [8, {
          target: 'It was simple!',
          qwe: [8, 17, 37],
        }],
      },
    };
  },
};


console.log(obj ваш поезд здесь); // I am a smart programmer
console.log(obj ваш поезд здесь); // It was simple!
